# Publish on windows, mac, and linux when any tag gets pushed

name: publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    tags: 
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]
        # os: [macos-latest, ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with: 
          lfs: true

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 16
          
      - name: Install Yarn
       run: npm install -g yarn@1.22.4
        
      - name: Install Packages
        run: yarn install
        
      - name: Build Titan Reactor TS application / Electorn
        run: yarn dist
        env: #satisfy electron-builder even though we're not using their publish function (yet?)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Zip Assets
        uses: vimtor/action-zip@v1
        with:
          files: packages/titan-reactor/dist/win-unpacked
          dest: titan-reactor.zip
          
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::Release_$(date +"%Y.%m.%d_%H-%M")"
          
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "titan-reactor.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag.outputs.release_tag }}
          prerelease: true
